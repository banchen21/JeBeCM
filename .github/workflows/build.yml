name: Build and Release

on:
  push:
    branches:
      - main
    tags:
      - 'v*'  # 触发发布的标签（如 v1.0.0）

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: 检出代码
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: 设置 Java 环境
      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      # Step 3: 缓存 Maven 依赖
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Step 4: 构建项目
      - name: Build with Maven
        run: mvn clean verify

      # Step 5: 调试 - 检查 target 目录内容
      - name: Debug: List target directory
        run: ls -al target

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      # Step 1: 检出代码
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: 设置 Git 配置
      - name: Set Git config
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

      # Step 3: 从 pom.xml 读取版本号
      - name: Extract project version
        id: extract_version
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      # Step 4: 创建并推送 Git 标签
      - name: Create and push Git tag
        if: github.ref == 'refs/heads/main'
        run: |
          git tag "v${{ env.VERSION }}"
          git push origin "v${{ env.VERSION }}"

      # Step 5: 上传发布文件到 GitHub Releases
      - name: Upload release
        uses: softprops/action-gh-release@v1
        with:
          files: target/*.jar # 上传构建后的 JAR 文件
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
